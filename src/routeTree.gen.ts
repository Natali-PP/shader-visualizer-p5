/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const ThirdLazyImport = createFileRoute('/third')()
const Squares1LazyImport = createFileRoute('/squares-1')()
const SixthLazyImport = createFileRoute('/sixth')()
const SecondLazyImport = createFileRoute('/second')()
const Grid1LazyImport = createFileRoute('/grid-1')()
const ForthLazyImport = createFileRoute('/forth')()
const FirstLazyImport = createFileRoute('/first')()
const FifthLazyImport = createFileRoute('/fifth')()
const Diamond1LazyImport = createFileRoute('/diamond-1')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ThirdLazyRoute = ThirdLazyImport.update({
  path: '/third',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/third.lazy').then((d) => d.Route))

const Squares1LazyRoute = Squares1LazyImport.update({
  path: '/squares-1',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/squares-1.lazy').then((d) => d.Route))

const SixthLazyRoute = SixthLazyImport.update({
  path: '/sixth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sixth.lazy').then((d) => d.Route))

const SecondLazyRoute = SecondLazyImport.update({
  path: '/second',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/second.lazy').then((d) => d.Route))

const Grid1LazyRoute = Grid1LazyImport.update({
  path: '/grid-1',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/grid-1.lazy').then((d) => d.Route))

const ForthLazyRoute = ForthLazyImport.update({
  path: '/forth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/forth.lazy').then((d) => d.Route))

const FirstLazyRoute = FirstLazyImport.update({
  path: '/first',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/first.lazy').then((d) => d.Route))

const FifthLazyRoute = FifthLazyImport.update({
  path: '/fifth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/fifth.lazy').then((d) => d.Route))

const Diamond1LazyRoute = Diamond1LazyImport.update({
  path: '/diamond-1',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/diamond-1.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/diamond-1': {
      id: '/diamond-1'
      path: '/diamond-1'
      fullPath: '/diamond-1'
      preLoaderRoute: typeof Diamond1LazyImport
      parentRoute: typeof rootRoute
    }
    '/fifth': {
      id: '/fifth'
      path: '/fifth'
      fullPath: '/fifth'
      preLoaderRoute: typeof FifthLazyImport
      parentRoute: typeof rootRoute
    }
    '/first': {
      id: '/first'
      path: '/first'
      fullPath: '/first'
      preLoaderRoute: typeof FirstLazyImport
      parentRoute: typeof rootRoute
    }
    '/forth': {
      id: '/forth'
      path: '/forth'
      fullPath: '/forth'
      preLoaderRoute: typeof ForthLazyImport
      parentRoute: typeof rootRoute
    }
    '/grid-1': {
      id: '/grid-1'
      path: '/grid-1'
      fullPath: '/grid-1'
      preLoaderRoute: typeof Grid1LazyImport
      parentRoute: typeof rootRoute
    }
    '/second': {
      id: '/second'
      path: '/second'
      fullPath: '/second'
      preLoaderRoute: typeof SecondLazyImport
      parentRoute: typeof rootRoute
    }
    '/sixth': {
      id: '/sixth'
      path: '/sixth'
      fullPath: '/sixth'
      preLoaderRoute: typeof SixthLazyImport
      parentRoute: typeof rootRoute
    }
    '/squares-1': {
      id: '/squares-1'
      path: '/squares-1'
      fullPath: '/squares-1'
      preLoaderRoute: typeof Squares1LazyImport
      parentRoute: typeof rootRoute
    }
    '/third': {
      id: '/third'
      path: '/third'
      fullPath: '/third'
      preLoaderRoute: typeof ThirdLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  Diamond1LazyRoute,
  FifthLazyRoute,
  FirstLazyRoute,
  ForthLazyRoute,
  Grid1LazyRoute,
  SecondLazyRoute,
  SixthLazyRoute,
  Squares1LazyRoute,
  ThirdLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/diamond-1",
        "/fifth",
        "/first",
        "/forth",
        "/grid-1",
        "/second",
        "/sixth",
        "/squares-1",
        "/third"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/diamond-1": {
      "filePath": "diamond-1.lazy.tsx"
    },
    "/fifth": {
      "filePath": "fifth.lazy.tsx"
    },
    "/first": {
      "filePath": "first.lazy.tsx"
    },
    "/forth": {
      "filePath": "forth.lazy.tsx"
    },
    "/grid-1": {
      "filePath": "grid-1.lazy.tsx"
    },
    "/second": {
      "filePath": "second.lazy.tsx"
    },
    "/sixth": {
      "filePath": "sixth.lazy.tsx"
    },
    "/squares-1": {
      "filePath": "squares-1.lazy.tsx"
    },
    "/third": {
      "filePath": "third.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
